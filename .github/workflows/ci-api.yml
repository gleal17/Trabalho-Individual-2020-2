name: CI API

on:
  push:
    branches: [ master ]
    paths:
      - "api/**"
  pull_request:
    branches: [ master ]
    paths:
      - "api/**"    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: env file
        run: |
          touch .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
      - name: Build api
        run: docker-compose up --build -d api
      - name: Run test
        run: docker-compose run api python manage.py test

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy docker container to heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: guilhermelml@gmail.com
          heroku_api_key: ${{ secrets.HEROKKU_API_KEY }}
          heroku_app_name: gces-ti-apir
          dockerfile_directory: ./api/
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web
        
